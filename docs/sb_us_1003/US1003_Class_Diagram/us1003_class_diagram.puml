@startuml US1003_class_diagram
'https://plantuml.com/class-diagram

title US1003 Class Diagram

interface AbstractUI{
# doShow()
}

class EntityManagementService <<Service>> {
+ getAssignedCostumerCodesList(EmailAddress username)
}

class Entity <<Domain>> <<Aggregate Root>> {
- String customerCode
- String companyName
- EmailAddress costumerManagerEmail
+ customerCode()
+ companyName()
}

class JobOpeningManagementService <<Service>> {
+ getJobOpeningsFromCostumerCodes(List<String> assignedCostumerCodesList)
+ filterJobOpeningList(List<Criteria> criteriaList)
}

class JobOpeningListDTOService <<Service>> {
+ convertToDTO(List<JobOpening> jobOpeningList)
}

class ListJobOpeningUI <<Presentation>> {
+ doShow()
}

class ListJobOpeningController <<Application>> {
+ getCriteria()
+ getJobOpeningList()
}

class Criteria <<Domain>> {
- denomination : String
+ toDTO()
}

class AuthorizationService <<Service>> {
+ loggedinUserWithPermissions(Role ... Action BaseRole.CUSTOMER_MANAGER)
}

class JobOpening <<Domain>> <<Aggregate Root>> {
- String function
- ContractType contractType
- WorkMode workMode
- Address jobOpeningAddress
- String jobReference
- Integer numVacancies
- String description
- File requirementsSpecificationsFile
}

class JobOpeningRepository <<Persistence>> <<Repository>> {
+ rebuild(JobOpening: entity)
+ getJobOpeningListMatchingCostumerCode(String costumerCode)
}

class CriteriaRepository <<Persistence>> <<Repository>> {
+ save(Criteria: entity)
+ jobOpeningCriteria()
}

class EntityRepository  <<Persistence>> <<Repository>>  {
+ save(e: Entity)
+ getCostumersByUsername(EmailAddress username)
}

interface RepositoryDatabase <<Persistence>> {
+ save(Entity: Entity)
}


'Associations
'Basic Flow
ListJobOpeningUI ..> ListJobOpeningController
ListJobOpeningController .> CriteriaRepository
ListJobOpeningController .> Criteria
ListJobOpeningController ..> EntityManagementService
ListJobOpeningController ..> JobOpeningManagementService
ListJobOpeningController ..> JobOpeningListDTOService

'Domain Layer
EntityManagementService -down-> EntityRepository
EntityManagementService --> Entity
JobOpeningManagementService --> JobOpeningRepository
JobOpeningManagementService --> JobOpening
JobOpeningListDTOService --> JobOpening


'Persistence Layer
CriteriaRepository --> Criteria
JobOpeningRepository --> JobOpening

'Interface implementation
RepositoryDatabase <|.. JobOpeningRepository : implements
RepositoryDatabase <|.. CriteriaRepository : implements
RepositoryDatabase <|.. EntityRepository : implements

AbstractUI <|.. ListJobOpeningUI : implements

'Authentication
AuthorizationService .right.> ListJobOpeningController

@enduml
@startuml

title US3002 Sequence Diagram

participant "<<presentation>>\n:ListCustomerJobOpeningsUI" as UI
participant "<<application>>\n:ListCustomerJobOpeningsController" as CTRL

participant "<<service>>\n:FollowUpConnectionService" as ConnSrv
participant ":ClientConnectionThread" as CLITHREAD
participant ":ListingRequestThread" as THREAD

participant "<<service>>\n:JobOpeningManagementService" as JobSrv
database "<<repository>>\n:JobOpeningRepository" as JobOpeningRepository
participant "<<service>>\n:JobOpeningListDTOService" as DTO

participant "<<service>>\n:CustomerManagementService" as CustSrv
database "<<repository>>\n:CustomerRepository" as CustomerRepository

autonumber

activate UI
ref over UI
shared-sequence-diagram
sequence-diagram-tcp-connection
end ref

UI -> CTRL : jobOpeningsDataList(username)
note bottom
username is obtained
as described in the
shared diagram
end note

activate CTRL
CTRL -> ConnSrv : getJobOpeningsDataList(username)
activate ConnSrv

ConnSrv -> CLITHREAD : receiveJobOpeningsDataList(username, code)
note left
code = 7 (JOBOPLIST)
end note

activate CLITHREAD

CLITHREAD -> THREAD** : getJobOpeningsList(code, username)
deactivate CLITHREAD
activate THREAD

THREAD -> JobSrv : getCustomerJobOpeningData(username)
activate JobSrv

JobSrv -> CustSrv : getCustomerByUsername(username)
activate CustSrv

CustSrv -> CustomerRepository : getCustomerByUsername(username)
activate CustomerRepository
deactivate CustomerRepository

deactivate CustSrv

JobSrv -> JobOpeningRepository : findAllJobOpeningsWithCustomerCode(customerCode.toString())
activate JobOpeningRepository
deactivate JobOpeningRepository


JobSrv -> DTO : convertJobOpeningsToCustomerJobOpeningDTO(jobOpeningsList)
activate DTO
deactivate DTO

JobSrv --> THREAD : jobOpeningsCustomerDataListDTO
deactivate JobSrv

loop for all DTOs
THREAD --> ConnSrv : sOut.writeObject(jobOpeningCustomerDataDTO)
deactivate THREAD
    note right
    sOut an ObjectOutputStream from
    the connection's sock OutputStream
    end note

end loop

ConnSrv --> CTRL : jobOpeningCustomerDataDTO
deactivate ConnSrv

CTRL --> UI : jobOpeningCustomerDataDTO
deactivate CTRL

UI -> UI : doShow()

opt "0 - Exit"

UI -> CTRL : closeConnection(PORT_NUMBER)
activate CTRL

CTRL -> ConnSrv : closeConnection(PORT_NUMBER)
deactivate CTRL
activate ConnSrv

ConnSrv -> CLITHREAD : closeConnection(code)
deactivate ConnSrv
activate CLITHREAD
note left
code = 1 (DISCONN)
end note

CLITHREAD --> CLITHREAD : clientSocket.close()

autonumber stop
CLITHREAD -[#white]> CLITHREAD
deactivate CLITHREAD


autonumber resume

UI -> UI : sock.close()
end opt

deactivate UI

@enduml
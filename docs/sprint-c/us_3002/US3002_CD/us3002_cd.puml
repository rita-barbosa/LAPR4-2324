@startuml
'https://plantuml.com/class-diagram

title US3002 Class Diagram

abstract class AbstractListUI {
# doShow()
}

interface Serializable {}

interface DTOable {
+ toDTO()
}

class ListCustomerJobOpeningsUI {
+ doShow()
}

class ListCustomerJobOpeningsController {
+ getSessionCredentials()
+ getconnection(String username, String password, int PORT_NUMBER)
+ jobOpeningsDataList(String username)
+ closeConnection(int PORT_NUMBER)
}


class FollowUpConnectionService {
+ getJobOpeningsDataList(String username)
+ closeConnection(int PORT_NUMBER)
+ establishConnection(String username, String password, InetAddress serverIP, int PORT_NUMBER)
}



class ClientConnectionThread {
+ receiveJobOpeningsDataList(String username, int code)
+ closeConnection(int code)
+ create(Socket clientSocket)
+ authenticationProtocol(DataDTO dataDTO)
}

class ListingRequestThread {
+ getJobOpeningsList(int code, String username)
}


class JobOpeningManagementService {
+ getCustomerJobOpeningData(String username)
}


class JobOpeningListDTOService {
+ convertJobOpeningsToCustomerJobOpeningDTO(List<JobOpening> jobOpeningsList)
}

class CustomerManagementService {
+ getCustomerByUsername(String username)
}

class CustomerRepository {
+ getCustomerByUsername(String username)
}

class JobOpeningRepository {
+ findAllJobOpeningsWithCustomerCode(String customerCode)
}

class AuthorizationService {
- theSession
}

class UserSession {
- authenticatedUser
}

class DataDTO {
+ create(int version, int code, List<DTOable> jobOpeningCustomerDataDTOList)
}

class FollowUpServer {}

class AuthenticationService {
+  authenticate(String username, String password,\n Role... BaseRoles.CUSTOMER_MANAGER,\n BaseRoles.CUSTOMER,\n BaseRoles.CANDIDATE)
}

class JobOpening {
+ toDTO()
}

class Socket {
+ Socket(InetAddress serverIP, int PORT_NUMBER)
+ close()
}

class ServerSocket {
+ ServerSocket(int PORT_NUMBER)
+ close()
}

class JobOpeningDataDTO {}

' ASSOCIATIONS

AbstractListUI <|.right. ListCustomerJobOpeningsUI : implements
DTOable <|.. JobOpening : implements
Serializable <|.. DataDTO : implements

ListCustomerJobOpeningsUI .right.> ListCustomerJobOpeningsController

ListCustomerJobOpeningsController ..> AuthorizationService
ListCustomerJobOpeningsController ..> FollowUpConnectionService
ListCustomerJobOpeningsController ..> JobOpeningDataDTO
ListCustomerJobOpeningsController ..> UserSession


FollowUpConnectionService ..> FollowUpServer
FollowUpConnectionService ..> ClientConnectionThread
FollowUpServer --> ClientConnectionThread
ClientConnectionThread --> ListingRequestThread
ClientConnectionThread --> AuthenticationService
ClientConnectionThread --> DataDTO

FollowUpConnectionService --> Socket
FollowUpServer --> ServerSocket

JobOpeningManagementService ..> JobOpeningRepository
JobOpeningRepository .up.> JobOpening
JobOpening -up-> JobOpeningDataDTO
JobOpeningListDTOService -up-> JobOpeningDataDTO
JobOpeningRepository --> JobOpeningListDTOService

JobOpeningManagementService ...> CustomerManagementService

CustomerManagementService ..> CustomerRepository

DataDTO <-- FollowUpConnectionService

AuthorizationService --> UserSession

@enduml
@startuml US1021_SD

skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

title US1021 Sequence Diagram

autonumber

actor "Customer Manager" as CM
participant "<<presentation>>\n:DisplayAllApplicationDataUI" as UI
participant "<<application>>\n:DisplayAllApplicationDataController" as CTRL
participant "<<repository>>\n:JobOpeningRepository" as JobOpeningRepository
participant "<<service>>\n:JobOpeningManagementService" as JobManagement
participant "<<repository>>\n:JobOpeningRepository" as JobOpeningRepository
participant "<<service>>\n:ApplicationManagementService" as AppManagement
participant "<<repository>>\n:ApplicationRepositoryRepository" as ApplicationRepository
participant "<<service>>\n:ApplicationDTOService" as AppDTOServ
participant "<<domain>>\n:Application" as Application

activate CM

CM -> UI : asks to display all the data of an application
activate UI

UI -> CTRL** : create()

UI -> CTRL: getApplicationsList()
activate CTRL

    CTRL -> CTRL : getJobOpeningList()
    activate CTRL

    ref over CTRL
    **[ref1]:** Check **sequence-diagram-get-job-openings**
    in the folder **team-decisions**
    end ref

    CTRL --> CTRL : jobOpeningDTOList
    deactivate CTRL


'    CTRL -> JobManagement : getJobOpening(jobOpeningDTO)
'    activate JobManagement
'
'    JobManagement -> JobOpeningRepository : getJobOpening(jobOpeningDTO)
'    activate JobOpeningRepository
'
'    JobOpeningRepository --> JobManagement : jobOpening
'    deactivate JobOpeningRepository
'
'    JobManagement --> CTRL : jobOpening
'    deactivate JobManagement


    CTRL -> JobManagement : getApplicationsList(jobOpeningDTOList)
    activate JobManagement

    loop for each jobOpening

        JobManagement -> JobOpeningRepository : getJobOpening(jobOpeningDTO)
        activate JobOpeningRepository

        JobOpeningRepository --> JobManagement : jobOpening
        deactivate JobOpeningRepository

        JobManagement -> AppManagement : getApplicationsList(jobOpening)
        activate AppManagement

        AppManagement -> ApplicationRepository : getApplicationsList(jobOpening)
        activate ApplicationRepository

        ApplicationRepository --> AppManagement : applicationList
        deactivate ApplicationRepository

        AppManagement --> AppDTOServ :  convertToDTO(applicationList)
            activate AppDTOServ

            loop for each application
            AppDTOServ -> Application : toDTO()
            activate Application
            deactivate Application
            end loop

            deactivate AppDTOServ


        deactivate AppManagement

        JobManagement -> JobManagement : add(applicationListDTO)

    end loop

    JobManagement --> CTRL : applicationsListDTO
    deactivate JobManagement

    CTRL --> UI : applicationsListDTO

    deactivate CTRL

UI --> CM : displays the applications and asks the user to select one application
deactivate UI

CM -> UI : selects the application
activate UI

'CHECK THIS PART --> BECAUSE I ALREADY HAVE ALL THE INFORMATION I NEED, SUCH AS INTERVIEW AND REQUIREMENTS INFORMATION,
'SO I ONLY NEED TO DISPLAY ALL THE OTHER INFORMATION THA TI HADN'T DISPLAYED YET????
UI -> CTRL : getAllApplicationInformation(applicationDTO)
activate CTRL

CTRL -> AppManagement : getAllApplicationInformation(applicationDTO)
activate AppManagement

AppManagement -> ApplicationRepository : getApplication(applicationDTO)
activate ApplicationRepository

ApplicationRepository --> AppManagement : application
deactivate ApplicationRepository

AppManagement --> AppDTOServ :  convertToDTO(application)
            activate AppDTOServ

            AppDTOServ -> Application : toDTO()
            activate Application
            deactivate Application

            deactivate AppDTOServ

        deactivate AppManagement


CTRL --> UI : applicationDTO
deactivate CTRL

UI --> CM : shows all the information of the application, including interviews and requirement process
deactivate UI

deactivate CM



@enduml


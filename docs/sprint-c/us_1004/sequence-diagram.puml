@startuml
'https://plantuml.com/sequence-diagram

title US1004 - Sequence Diagram

autonumber

actor "Customer Manager" as USER
participant ":EditJobOpeningUI" as UI <<presentation>>
participant ":EditJobOpeningController" as CTRL <<application>>
participant ":AuthorizationService" as AUTHZ <<service>>
database ":JobOpeningRepository" as JO_REPO <<repository>>
participant ":JobOpening" as JO <<domain>>

activate USER

USER -> UI : asks to edit job opening
activate UI

UI -> CTRL**: create

UI -> CTRL : getJobOpeningList()
activate CTRL

ref over CTRL
**[ref1]:** Check **sequence-diagram-get-job-openings**
in the folder **team-decisions**
end ref

CTRL --> UI: jobOpeningListDTO
deactivate CTRL

UI --> USER : displays the job openings and asks to select one
deactivate UI


USER -> UI : selects job opening
activate UI

    UI -> CTRL: editableJobOpeningInformation(jobOpeningDto)
    activate CTRL

    CTRL -> AUTHZ:  ensureAuthenticatedUserHasAnyOf(roles)
    activate AUTHZ
    deactivate AUTHZ

    CTRL -> JO_REPO: ofIdentity(jobReference)
    activate JO_REPO

    JO_REPO --> CTRL: jobOpening
    deactivate JO_REPO

    CTRL -> JO : editableJobOpeningInformation()
    activate JO

    JO --> CTRL: editableInformationValues
    deactivate JO

    CTRL --> UI: editableInformationValues
    deactivate CTRL


UI --> USER : shows all the information that can be edited and asks to select one
deactivate UI

loop while user wants to edit
    USER -> UI : selects information that wants to edit
    activate UI

    alt information == (requirements | interviewModel | ContractType | WorkMode)

        ref over UI
            Check **sequence-diagram-get-information**
        end ref
    end alt

    UI --> USER : asks for the new information
    deactivate UI

    USER -> UI: provides the new information
    activate UI
end loop

    UI -> CTRL: changeJobOpeningInformation(jobOpening, newInformation)
    activate CTRL

        note left CTRL
        This method will contain
        a variable number of attributes,
        depending on how many changes
        the user makes.
        end note

    CTRL -> AUTHZ:  ensureAuthenticatedUserHasAnyOf(roles)
    activate AUTHZ
    deactivate AUTHZ

    CTRL -> JO_REPO: ofIdentity(jobReference)
    activate JO_REPO

    JO_REPO --> CTRL: jobOpening
    deactivate JO_REPO

    CTRL -> JO: changeInformation(newInformation)
    activate JO

        note left JO
        This method will contain
        a variable number of attributes,
        depending on how many changes
        the user makes.
        end note

    JO --> CTRL: success
    deactivate JO

    CTRL -> JO_REPO: save(jobReference)
    activate JO_REPO
    deactivate JO_REPO

CTRL --> UI:
deactivate CTRL

UI --> USER: displays success

deactivate USER


@enduml
@startuml US1017_CD
title US1017 Class Diagram

'package "Presentation" {
    class UploadInterviewResponsesUI <<Presentation>> {
    }
'}

'package "Application" {
    class UploadInterviewResponsesController <<Application>> {
        + getInterviewModelTemplates()
        + getApplicationList()
        + getJobOpeningList()
        + getAllApplicationInformation(applicationDTO)
    }
'}

class JobOpeningManagementService <<Service>> {
+ jobOpeningsOfCustomerManager(username)
    + getJobOpening(jobOpeningDTO)
    + getApplicationList(jobOpeningDTOList)
}

class InterviewModelManagementService <<Service>> {
    + getInterviewModelTemplates()
    + getInterviewModel(interviewModelDTO)
}

class InterviewModelDTOService <<Service>> {
    + convertToDTO(interviewModelList)
}

class JobOpeningDTOService <<Service>> {
    + convertToDTO(jobOpeningList)
}

class ApplicationManagementService <<Service>> {
    + getApplicationsList(jobOpening)
    + getAllApplicationInformation(applicationDTO)
}

class ApplicationDTOService <<Service>> {
    + convertToDTO(applicationList)
}

class InterviewTemplateManagerService <<Service>> {
    + checkFileFormat(filepath)
}

class InterviewModelPlugin <<Plugin>> {
    + checkFileFormat(filepath)
}

class InterviewModelParser <<Parser>> <<Interpreter>> {
    + checkFileSyntax(filepath)
}


    class AuthenticationService <<Application>> <<Service>> {
        + loggedinUserWithPermissions(BaseRole.CUSTOMER_MANAGER)
    }

    class CustomerManager <<Domain>> <<Aggregate Root>> {
        + customerCode()
    }

    class JobOpening <<Domain>> <<Aggregate Root>> {
        - function : String
        - contractType : ContractType
        - workMode : WorkMode
        - companyAddress : Address
        - costumerCode : String
        - companyName : String
        - numVacancies : Integer
        - description : String
        - requirementsSpecificationsFile : File
        + toDTO()
    }

    class Application <<Domain>> <<Aggregate Root>> {
        - requirementAnswer : String
        - requirementResult : Integer
        - file : File
        - email : String
        - applicationDate : Date
        - applicationStatus : Boolean
        - candidateName : String
        - phoneNumber : Integer
        - interview : Interview
        + toDTO()
    }

    class Interview <<Domain>> <<Value Object>> {
        - interviewTypeDenomination : String
        - schedule : Date
        - interviewResult : String
        - interviewGrade : Integer
        - justification : String
        - interviewAnswer :  String
        + valueOf()
    }

    class InterviewModel <<Domain>> <<Value Object>> {
        - interviewModelName : String
        - interviewModelDescription : String

        + toDTO()
    }
'}

'package "Persistence" {
    class InterviewModelRepository <<Persistence>> <<Repository>> {
        + getInterviewModelTemplates()
        + getInterviewModel(interviewModelDTO)
    }

    class JobOpeningRepository <<Persistence>> <<Repository>> {
        + getJobOpeningListMatchingCustomerManager(customerManagerUsername)
        + getJobOpening(JobOpeningDTO)
    }

    class ApplicationRepository <<Persistence>> <<Repository>> {
        + getApplicationsListWithInterviewResult()
    }

'}

' Associations
CustomerManager ..> UploadInterviewResponsesController
UploadInterviewResponsesUI ..> UploadInterviewResponsesController
UploadInterviewResponsesController ..> JobOpeningRepository
UploadInterviewResponsesController ..> ApplicationRepository
UploadInterviewResponsesController ..> ApplicationManagementService
UploadInterviewResponsesController ..> JobOpeningManagementService
UploadInterviewResponsesController ..> JobOpeningDTOService
UploadInterviewResponsesController ..> ApplicationDTOService
UploadInterviewResponsesController ..> InterviewModelManagementService
UploadInterviewResponsesController ..> InterviewModelDTOService
UploadInterviewResponsesController ..> InterviewTemplateManagerService


' Domain Layer
Interview "0..1" -> "*" Application : characterizes
JobOpeningManagementService --> JobOpeningRepository
JobOpeningManagementService --> JobOpening
ApplicationManagementService --> Application
ApplicationManagementService --> ApplicationRepository
ApplicationDTOService --> Application
JobOpeningDTOService --> JobOpening
InterviewModelManagementService --> InterviewModel
InterviewModelManagementService --> InterviewModelRepository
InterviewModelDTOService --> InterviewModel
InterviewTemplateManagerService -> InterviewModelPlugin
InterviewModelPlugin --> InterviewModelParser


' Persistence Layer
JobOpeningRepository "1" --> "1" InterviewModel : rebuilds
JobOpeningRepository <.. JobOpening : persisted by

ApplicationRepository <.. Application : persisted by
ApplicationRepository "1" --> "*" Interview : rebuilds

InterviewModelRepository <.. InterviewModel : persisted by

' Authentication
AuthenticationService ..> UploadInterviewResponsesController

@enduml

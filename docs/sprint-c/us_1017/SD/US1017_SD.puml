@startuml US1017_SD

title US1017 Sequence Diagram

actor "Customer Manager" as USER
|||


participant "<<presentation>>\n:UploadInterviewResponsesUI" as UI
participant "<<application>>\n:UploadInterviewResponsesController" as CTRL
participant "<<service>>\n:InterviewModelManagementService" as IntModelMan
database "<<repository>>\n:InterviewModelRepository" as IntModelRepository
participant "<<service>>\n:InterviewModelDTOService" as IntModDTOServ
participant "<<domain>>\n:InterviewModel" as IntModel
participant "<<service>>\n:JobOpeningManagementService" as JobManagement
database "<<repository>>\n:JobOpeningRepository" as JobOpeningRepository
participant "<<domain>>\n:JobOpening" as JobOpening
participant "<<service>>\n:ApplicationManagementService" as AppManagement
participant "<<repository>>\n:ApplicationRepositoryRepository" as ApplicationRepository
participant "<<service>>\n:ApplicationDTOService" as AppDTOServ
participant "<<domain>>\n:Application" as Application
participant "<<service>>\n:InterviewTemplateManagerService" as IntManager
'database "<<repository>>\n:InterviewModelRepository" as IntRep

box Plugin
participant "<<Plugin>>\n:InterviewModelPlugin" as Plugin
participant "<<Parser/Interpreter>>\n:InterviewModelParser" as Parser
end box


activate USER

USER -> UI : asks to upload a text file with the candidates\n responses for an interview
activate UI

UI -> CTRL : create()
activate CTRL
deactivate CTRL

UI -> CTRL :  getInterviewModelTemplates()
activate CTRL

CTRL -> IntModelMan : getInterviewModelTemplates()
activate IntModelMan

IntModelMan -> IntModelRepository : getInterviewModelTemplates()
activate IntModelRepository
deactivate IntModelRepository

IntModelMan --> IntModDTOServ :  convertToDTO(interviewModelList)
    activate IntModDTOServ

    loop for each interview model
    IntModDTOServ -> IntModel : toDTO()
    activate IntModel
    deactivate IntModel
    end loop

    deactivate IntModDTOServ

    IntModelMan --> CTRL : interviewModelListDTO
    deactivate IntModelMan

    CTRL --> UI : interviewModelListDTO
        deactivate CTRL


UI --> USER : shows the interview templates and asks\n to select one
deactivate UI



USER -> UI : selects the interview model
activate UI

UI -> CTRL: getJobOpeningList()
activate CTRL

    ref over CTRL
    **[ref1]:** Check **sequence-diagram-get-job-openings**
    in the folder **team-decisions**
    end ref

    CTRL --> UI : jobOpeningListDTO
    deactivate CTRL


UI --> USER : asks to select a job opening
deactivate UI

USER -> UI : selects a job opening
activate UI


UI -> CTRL: getApplicationList(JobOpeningDTO)
activate CTRL

CTRL -> JobManagement : getJobOpening(jobOpeningDTO)
    activate JobManagement

    JobManagement -> JobOpeningRepository : getJobOpening(jobOpeningDTO)
    activate JobOpeningRepository

    JobOpeningRepository --> JobManagement : jobOpening
    deactivate JobOpeningRepository

    JobManagement --> CTRL : jobOpening
    deactivate JobManagement


    CTRL -> AppManagement : getApplicationsList(jobOpening)
    activate AppManagement

    AppManagement -> ApplicationRepository : getApplicationsListWithInterviewResult()
    activate ApplicationRepository
    deactivate ApplicationRepository


    AppManagement --> AppDTOServ :  convertToDTO(applicationList)
    activate AppDTOServ

    loop for each application
    AppDTOServ -> Application : toDTO()
    activate Application
    deactivate Application
    end loop

    deactivate AppDTOServ

    AppManagement --> CTRL : applicationsListDTO
    deactivate AppManagement

    CTRL --> UI : applicationsListDTO
        deactivate CTRL

UI --> USER : asks to select a candidate's application
deactivate UI

USER -> UI : selects a candidate's application
activate UI

UI --> USER : asks to provide the filepath
deactivate UI

USER -> UI : gives the filepath
activate UI


UI -> CTRL : uploadInterviewModelAnswers(applicationDTO, filepath, interviewModelDTO)
activate CTRL

' CHECK IF THIS IS NECESSARY OR IF THE PLUGIN IT'S AUTOMATIC?? --> INTERVIEWMODEL
CTRL -> IntModelMan : getInterviewModel(interviewModelDTO)
activate IntModelMan

IntModelMan -> IntModelRepository : getInterviewModel(interviewModelDTO)
activate IntModelRepository

IntModelRepository --> IntModelMan : interviewModel
deactivate IntModelRepository

IntModelMan --> CTRL : interviewModel
deactivate IntModelMan

CTRL -> IntManager : checkFileFormat(filepath)
activate IntManager

IntManager -> Plugin : checkFileFormat(filepath)
activate Plugin


Plugin -> Parser : checkFileSyntax(filepath)
note left: Along with the requirements\n template grammar.

activate Parser
deactivate Parser


Plugin --> IntManager : confirmation
deactivate Plugin




'CTRL -> IntManager : getInterviewFromJobOpening(jobOpeningDTO)
'activate IntManager
'
'IntManager -> IntRep : interviewModelFromDTO(jobOpeningDTO)
'deactivate IntManager
'activate IntRep



'UI -> CTRL : exportTemplateFile(jobOpeningDTO)
'activate CTRL
'
'CTRL -> IntManager : getInterviewFromJobOpening(jobOpeningDTO)
'activate IntManager
'
'IntManager -> IntRep : interviewModelFromDTO(jobOpeningDTO)
'deactivate IntManager
'activate IntRep
'
'IntRep -[#lightblue]> IntRep
'deactivate IntRep
'
'
'    CTRL -> IntManager : generateNewTemplate(interviewModel)
'    activate IntManager
'
'        IntManager -> Plugin : newInterviewModelTemplate()
'    activate Plugin
'
'        Plugin -> Plugin : generateFile()
'
'        Plugin -> Parser : checkFileSyntax(templateFile)
'        note left: Along with the requirements\n template grammar.
'
'        activate Parser
'        deactivate Parser
'
'        Plugin -> Plugin : export()
'       Plugin --> IntManager : confirmation
'    deactivate Plugin

    IntManager --> CTRL : confirmation
    deactivate IntManager

    CTRL -> AppManagement : getApplication(applicationDTO)
        activate AppManagement

        AppManagement -> ApplicationRepository : getApplication(applicationDTO)
        activate ApplicationRepository

        ApplicationRepository --> AppManagement : application
        deactivate ApplicationRepository

'????? CHECK !!!
        AppManagement --> ApplicationRepository :  add(filepath)
        activate ApplicationRepository
        deactivate ApplicationRepository

'        AppManagement --> CTRL : application
'        deactivate AppManagement

deactivate AppManagement



    CTRL --> UI : shows operation success
deactivate CTRL



UI --> USER : shows operation success
deactivate UI



@enduml
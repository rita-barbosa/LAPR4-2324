@startuml
autonumber

title US1016 Sequence Diagram

actor "Customer Manager" as CustomerManager

participant ":SendNotificationEmailUI" as UI <<presentation>>
participant ":SendNotificationEmailController" as CTRL <<application>>
participant ":FollowUpConnectionService" as ServerService <<service>>
participant ":ApplicationManagementService" as ApplicationService <<Service>>
participant ":ApplicationDTOService" as ApplicationDTOService <<Service>>
participant ":AuthorizationService" as AUTHZ <<service>>
participant ":ApplicationRepository" as ApplicationRepository <<repository>>

note right AUTHZ
The AuthorizationService is implemented
in the eapli framework and will
be used in this functionality.
end note

activate CustomerManager

CustomerManager -> UI : wants to record the time and date for an interview with the candidate
activate UI

UI -> CTRL**: create

UI -> CTRL: getApplicationsList()
activate CTRL
CTRL -> AUTHZ:  ensureAuthenticatedUserHasAnyOf(roles)
activate AUTHZ
deactivate AUTHZ
CTRL ->ApplicationService: getApplicationsListWithoutNotification()
    activate ApplicationService
        ApplicationService -> ApplicationRepository: getApplicationsList()

        activate ApplicationRepository
            ApplicationRepository -> ApplicationService: ApplicationsList
        deactivate ApplicationRepository

        ApplicationService-> ApplicationDTOService: convertToDto(ApplicationsList)
        activate ApplicationDTOService
            ApplicationDTOService -> ApplicationService:ApplicationsDtoList
        deactivate ApplicationDTOService
        ApplicationService -> CTRL: ApplicationsDtoList
    deactivate ApplicationService
    CTRL -> UI: ApplicationsDtoList
deactivate CTRL

UI--> CustomerManager: Shows the application list
CustomerManager-> UI: Selects an application

UI->CTRL: sendEmail()
activate CTRL
    CTRL ->ServerService: connectToServer()
    activate ServerService
        ServerService --> CTRL: success
    deactivate ServerService
    CTRL -> ServerService: sendEmail(customerManagerEmail,candidateEmail, topic, emailBody)
    activate ServerService
        ServerService--> CTRL: success
    deactivate ServerService

    CTRL-> ApplicationService: updateApplicationNotificationState()
    activate ApplicationService
        ApplicationService -> ApplicationRepository: save(applcation)
        activate ApplicationRepository
        deactivate ApplicationRepository
    deactivate ApplicationService
deactivate CTRL
UI --> CustomerManager: success
deactivate UI
deactivate CustomerManager

@enduml
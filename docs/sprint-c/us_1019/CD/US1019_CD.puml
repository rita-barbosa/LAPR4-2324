@startuml US1019_CD
title US1019 Class Diagram

'package "Presentation" {
    class ListCandidatesUI <<Presentation>> {
    }
'}

'package "Application" {
    class ListCandidatesController <<Application>> {
        + getJobOpeningList()
        + getCandidateList(jobOpeningDTO)
    }
'}

class JobOpeningManagementService <<Service>> {
    + getJobOpeningsOfCustomerManager(username)
    + getJobOpeningsFromCustomerCodes(assignedCustomerCodesList)
    + getJobOpening(jobOpeningDTO)
}

class CustomerManagementService <<Service>> {
    + getAssignedCustomerCodesList(username)
}

class JobOpeningDTOService <<Service>> {
    + convertToDTO(jobOpeningList)
}

class ApplicationManagementService <<Service>> {
    + getApplicationsList(jobOpening)
}

class ApplicationDTOService <<Service>> {
    + convertToDTO(applicationList)
}

class CandidateManagementService <<Service>> {
    + getCandidateList(applicationsListDTO)
}

class CandidateDTOService <<Service>> {
    + convertToDTO(candidateList)
}

'package "Domain" {
    package "Authentication and Users" {
        class AuthenticationService <<Application>> <<Service>> {
        }
        class Session <<Domain>> <<Value Object>> {
        }
        class SystemUser <<Domain>> <<Aggregate Root>> {
        }
        class Username <<Domain>> <<Value Object>> <<ID>> {
            - value : String
        }
    }

    class CustomerManager <<Domain>> <<Aggregate Root>> {
        + customerCode()
    }

    class Candidate <<Domain>> <<Aggregate Root>> {
        - phoneNumber : PhoneNumber
        - systemUser : SystemUser
        + toDTO()
    }

    class JobOpening <<Domain>> <<Aggregate Root>> {
        - function : String
        - contractType : ContractType
        - workMode : WorkMode
        - companyAddress : Address
        - costumerCode : String
        - companyName : String
        - numVacancies : Integer
        - description : String
        - requirementsSpecificationsFile : File
        + toDTO()
    }

    class WorkMode <<Domain>> <<Value Object>> {
        - workModeDenomination: String
        + valueOf()
        + mode()
    }

    class ContractType <<Domain>> <<Value Object>> {
        - contractTypeDenomination : String
        + valueOf()
        + type()
    }

    class Application <<Domain>> <<Aggregate Root>> {
        - requirementAnswer : String
        - requirementResult : Integer
        - file : File
        - email : String
        - applicationDate : Date
        - applicationStatus : Boolean
        - candidateName : String
        - phoneNumber : Integer
        - interview : Interview
        + toDTO()
    }

    class Interview <<Domain>> <<Value Object>> {
        - interviewTypeDenomination : String
        - schedule : Date
        - interviewResult : String
        - interviewGrade : Integer
        - justification : String
        - interviewAnswer :  String
        + valueOf()
    }
'}

'package "Persistence" {
    class JobOpeningRepository <<Persistence>> <<Repository>> {
        + getJobOpeningListMatchingCustomerCode(customerCode)
        + getJobOpening(JobOpeningDTO)
    }

    class CustomerRepository <<Persistence>> <<Repository>> {
        + getCustomersByUsername(username)
    }

    class ApplicationRepository <<Persistence>> <<Repository>> {
        + getApplicationsListWithInterviewResult()
    }

    class CandidateRepository <<Persistence>> <<Repository>> {
        + getCandidateList(applicationsListDTO)
    }

    interface RepositoryDatabase <<Persistence>> {
    }
'}

' Associations
CustomerManager ..> ListCandidatesController
ListCandidatesUI ..> ListCandidatesController
ListCandidatesController ..> JobOpeningRepository
ListCandidatesController ..> ApplicationRepository
ListCandidatesController ..> CandidateRepository
ListCandidatesController ..> CustomerRepository
ListCandidatesController ..> ApplicationManagementService
ListCandidatesController ..> JobOpeningManagementService
ListCandidatesController ...> JobOpeningDTOService
ListCandidatesController ..> ApplicationDTOService
ListCandidatesController ..> CandidateManagementService
ListCandidatesController ..> CandidateDTOService

' Domain Layer
WorkMode "1" --> "*" JobOpening : characterizes
ContractType "1" --> "*" JobOpening  : characterizes
Interview "0..1" --> "*" Application : characterizes
JobOpeningManagementService --> JobOpeningRepository
JobOpeningManagementService --> JobOpening
ApplicationManagementService --> Application
ApplicationManagementService --> ApplicationRepository
ApplicationDTOService --> Application
JobOpeningDTOService --> JobOpening
CandidateManagementService --> CandidateRepository
CandidateManagementService --> Candidate
CandidateDTOService --> Candidate
CustomerManagementService --> CustomerRepository
CustomerManagementService --> CustomerManager

' Persistence Layer
JobOpeningRepository "1" --> "*" ContractType : rebuilds
JobOpeningRepository "1" --> "*" WorkMode : rebuilds
JobOpeningRepository <.. JobOpening : persisted by

ApplicationRepository <.. Application : persisted by
ApplicationRepository "1" --> "*" Interview : rebuilds

CandidateRepository <.. Candidate : persisted by

CustomerRepository <.. CustomerManager : persisted by

' Interface implementation
RepositoryDatabase <|.. JobOpeningRepository : implements
RepositoryDatabase <|.. ApplicationRepository : implements
RepositoryDatabase <|.. CandidateRepository : implements
RepositoryDatabase <|.. CustomerRepository : implements

' Authentication
Session --> SystemUser
SystemUser -> Username
AuthenticationService .> Username
AuthenticationService .> Session
AuthenticationService ..> ListCandidatesController
CustomerManager --|> SystemUser
Candidate --|> SystemUser

@enduml

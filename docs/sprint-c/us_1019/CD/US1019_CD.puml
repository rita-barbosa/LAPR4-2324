@startuml US1019_CD
title US1019 Class Diagram

'package "Presentation" {
    class ListOrderedCandidatesUI <<Presentation>> {
    }
'}

'package "Application" {
    class ListOrderedCandidatesController <<Application>> {
        + getJobOpeningList()
        + getCandidateList(jobOpeningDTO)
    }
'}

class JobOpeningManagementService <<Service>> {
    + jobOpeningsOfCustomerManager(username)
    + getJobOpening(jobOpeningDTO)
}

class JobOpeningDTOService <<Service>> {
    + convertToDTO(jobOpeningList)
}

class ApplicationManagementService <<Service>> {
    + getApplicationsList(jobOpening)
}

class ApplicationDTOService <<Service>> {
    + convertToDTO(applicationList)
}

class CandidateManagementService <<Service>> {
    + getCandidateList(applicationsListDTO)
}

class CandidateDTOService <<Service>> {
    + convertToDTO(candidateList)
}


    class AuthenticationService <<Application>> <<Service>> {
        + loggedinUserWithPermissions(BaseRole.CUSTOMER_MANAGER)

    }

    class CustomerManager <<Domain>> <<Aggregate Root>> {
        + customerCode()
    }

    class Candidate <<Domain>> <<Aggregate Root>> {
        - phoneNumber : PhoneNumber
        - systemUser : SystemUser
        + toDTO()
    }

    class JobOpening <<Domain>> <<Aggregate Root>> {
        - function : String
        - contractType : ContractType
        - workMode : WorkMode
        - companyAddress : Address
        - costumerCode : String
        - companyName : String
        - numVacancies : Integer
        - description : String
        - requirementsSpecificationsFile : File
        + toDTO()
    }

    class Application <<Domain>> <<Aggregate Root>> {
        - requirementAnswer : String
        - requirementResult : Integer
        - file : File
        - email : String
        - applicationDate : Date
        - applicationStatus : Boolean
        - candidateName : String
        - phoneNumber : Integer
        - interview : Interview
        + toDTO()
    }

    class Interview <<Domain>> <<Value Object>> {
        - interviewTypeDenomination : String
        - schedule : Date
        - interviewResult : String
        - interviewGrade : Integer
        - justification : String
        - interviewAnswer :  String
        + valueOf()
    }
'}

'package "Persistence" {
    class JobOpeningRepository <<Persistence>> <<Repository>> {
        + getJobOpeningListMatchingCustomerCode(customerCode)
        + getJobOpening(JobOpeningDTO)
    }

    class ApplicationRepository <<Persistence>> <<Repository>> {
        + getApplicationsListWithInterviewResult()
    }

    class CandidateRepository <<Persistence>> <<Repository>> {
        + getCandidateList(applicationsListDTO)
    }
'}

' Associations
CustomerManager ..> ListOrderedCandidatesController
ListOrderedCandidatesUI ..> ListOrderedCandidatesController
ListOrderedCandidatesController ..> JobOpeningRepository
ListOrderedCandidatesController ..> ApplicationRepository
ListOrderedCandidatesController ..> CandidateRepository
ListOrderedCandidatesController ..> ApplicationManagementService
ListOrderedCandidatesController ..> JobOpeningManagementService
ListOrderedCandidatesController ..> JobOpeningDTOService
ListOrderedCandidatesController ..> ApplicationDTOService
ListOrderedCandidatesController ..> CandidateManagementService
ListOrderedCandidatesController ..> CandidateDTOService

' Domain Layer
Interview "0..1" --> "*" Application : characterizes
JobOpeningManagementService --> JobOpeningRepository
JobOpeningManagementService --> JobOpening
ApplicationManagementService -> Application
ApplicationManagementService -> ApplicationRepository
ApplicationDTOService -> Application
JobOpeningDTOService --> JobOpening
CandidateManagementService --> CandidateRepository
CandidateManagementService --> Candidate
CandidateDTOService --> Candidate

' Persistence Layer
JobOpeningRepository <.. JobOpening : persisted by

ApplicationRepository <.. Application : persisted by
ApplicationRepository "1" --> "*" Interview : rebuilds

CandidateRepository <.. Candidate : persisted by


' Authentication
AuthenticationService ..> ListOrderedCandidatesController

@enduml

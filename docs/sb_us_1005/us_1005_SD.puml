@startuml US1005_SD

skinparam monochrome true
skinparam packageStyle rectangle
skinparam shadowing false

autonumber

actor "Customer Manager" as CM
participant "<<presentation>>\nListJobOpeningUI" as UI
participant "<<application>>\nListJobOpeningController" as CTRL
participant "<<persistence>>\nPersistenceContext" as Persistence
participant "<<factory>>\nRepositoryFactory" as RepositorySingleton
participant "<<repository>>\nJobOpeningRepository" as JobOpeningRepository
participant "<<factory>>\nJobOpeningFactory" as JobOpeningFactory
participant "<<domain>>\nJobOpening" as JobOpening
participant "<<repository>>\nApplicationRepository" as ApplicationRepository
participant "<<factory>>\nApplicationFactory" as ApplicationFactory
participant "<<domain>>\nApplication" as Application

activate CM

CM -> UI : asks to list all the applications for job opening
activate UI

UI -> CTRL** : create()

UI -> CTRL: getJobOpeningList()
activate CTRL

    CTRL -> Persistence : getInstance()
    activate Persistence

    Persistence --> CTRL: repositories
    deactivate Persistence

    CTRL -> RepositorySingleton : getJobOpeningRepository()
    activate RepositorySingleton

    RepositorySingleton -> JobOpeningRepository** : create()

    RepositorySingleton --> CTRL: JobOpeningRepository
    deactivate RepositorySingleton

    CTRL -> JobOpeningRepository : getJobOpeningList()
    activate JobOpeningRepository

    JobOpeningRepository --> CTRL : jobOpeningList
    deactivate JobOpeningRepository

    |||
        CTRL -> CTRL : toDTO(jobOpeningList)
        activate CTRL

            ref over CTRL
                Convert job Opening List to DTO
            end ref

        CTRL --> CTRL : jobOpeningListDTO
        deactivate CTRL

        CTRL --> UI : jobOpeningListDTO

    deactivate CTRL

UI --> CM : shows the job opening with applications and asks to select one
deactivate UI

CM -> UI : selects the job opening
activate UI

UI -> CTRL: getApplicationsList()
activate CTRL

    CTRL -> RepositorySingleton : getApplicationsRepository()
    activate RepositorySingleton

    RepositorySingleton -> ApplicationRepository** : create()

    RepositorySingleton --> CTRL: ApplicationRepository
    deactivate RepositorySingleton

    CTRL -> ApplicationRepository : getApplicationsList(jobOpening)
    activate ApplicationRepository

    ApplicationRepository --> CTRL : applicationsList
    deactivate ApplicationRepository

    |||
        CTRL -> CTRL : toDTO(applicationsList)
        activate CTRL

            ref over CTRL
                Convert applications List to DTO
            end ref

        CTRL --> CTRL : applicationsListDTO
        deactivate CTRL

        CTRL --> UI : applicationsListDTO

    deactivate CTRL


UI --> CM : shows the applications list
deactivate UI

deactivate CM



@enduml

